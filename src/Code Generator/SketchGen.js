
var Sketch = Sketch || {};

/**
 * @classdesc Creates an instance of the SketchGen module. SketchGen takes a JSON tree output by the default Jison generated parser and outputs MVM bytecode used to drive computations and canvas operations.
 * @class Sketch.SketchGen
 * @public
 * @author FelixMcFelix (Kyle S.)
 */

Sketch.SketchGen = function(){
	var instructions = {
		program: function(args){console.log(args);},
		addition: function(args){console.log("add");},
		subtraction: function(args){console.log("sub");},
		multiplication: function(args){console.log("mul");},
		division: function(args){console.log("div");}
	}

	var buffer = [];

	interpretNode = function(node){
		instructions[node.type](node.arguments);
	}

	/**
	 * Compile a Sketch program.
	 * @method Sketch.Driver#compile
	 * @param {Object} program - an AST object generated by 
	 * @returns number[] - an array of opcodes and literals to be parsed by MVM.
	 * @public
	 */
	this.interpret = function(program){
		buffer = [];
		console.log("Object instantiated and called, walking tree.");
		interpretNode({
			type: "program",
			arguments: program
		});
		return buffer;
	}
}